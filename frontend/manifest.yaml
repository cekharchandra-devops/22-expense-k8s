apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend
  namespace: expense
data:
  expense.conf: |
    proxy_http_version 1.1;
    server{
        listen 80;
        server_name _;
        location / {
          root /usr/share/nginx/html;
          index index.html index.htm;
          try_files $uri $uri/ /index.html;
        }
        location /images/ {
          expires 5s;
          root   /usr/share/nginx/html;
          try_files $uri /images/placeholder.png;
        }
        location /api/ { 
          proxy_pass http://backend:8080/; 
        }

      location /health {
        stub_status on;
        access_log off;
      }
    }
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense
  labels:
    app: frontend
    env: prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
      env: prod
  template:
    metadata:
      labels:
        app: frontend
        env: prod
    spec:
      containers:
        - name: frontend
          image: cekharch/frontend:v3.0
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:  
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: expense-config-map
              mountPath: /etc/nginx/conf.d/expense.conf # the path where configmap data will be mounted
              subPath: expense.conf  # the specific file within the configmap to mount
              readOnly: true #specifies that volume is readonly
      volumes:
        - name: expense-config-map
          configMap:
            name: frontend
            items:
              - key: expense.conf
                path: expense.conf

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: expense
  labels:
    app: frontend
    env: prod
spec:
  # type: LoadBalancer
  selector:
    app: frontend
    env: prod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: frontend-svc-port

---
apiVersion: elbv2.k8s.aws/v1beta1
kind: TargetGroupBinding
metadata:
  name: frontend
  namespace: expense
spec:
  serviceRef:
    name: frontend
    port: 80
  targetGroupARN: arn:aws:elasticloadbalancing:us-east-1:528757792370:targetgroup/expense-dev/7051fe87db261b8a
